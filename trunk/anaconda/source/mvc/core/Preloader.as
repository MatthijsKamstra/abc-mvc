package mvc.core {	import flash.display.Graphics;	import flash.display.Loader;	import flash.display.MovieClip;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.net.URLRequest;	/**	 * This is the document class for the preloader wrapper swf.	 */	public class Preloader extends MovieClip {		public var progressBar : MovieClip;		protected var loader : Loader;		protected var swf : String = "main.swf"; // default swf		public function Preloader(inPreloader : MovieClip = null) {			// create preloader container			progressBar = (inPreloader == null) ? new MovieClip() : inPreloader;			centerProgressBar();			addChild(progressBar);        				// setup loader			loader = new Loader(); 				loader.contentLoaderInfo.addEventListener(Event.INIT, onInitHandler);			loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, _onProgressHandler);           			// wait for stage			addEventListener(Event.ADDED_TO_STAGE, onAddedToStageHandler);            			// load...			loader.load(new URLRequest(swf));		}		/**		 * visualize the loading progress and center (horizontal/vertical) the progressBar 		 */		private function _onProgressHandler(event : ProgressEvent = null) : void {			onProgressHandler(event);			if(stage != null) centerProgressBar();		}		/**		 * if you use your own progressBar movieclip, override this function		 * and use: new Preloader (foobarMC);		 */				protected function onProgressHandler(event : ProgressEvent = null) : void {						// update the preloader with the loading progress			var _progressBar : Graphics = progressBar.graphics;			_progressBar.clear();			// draw the outline of a progress bar			_progressBar.lineStyle(1, 0xffffff, 1, true);			_progressBar.drawRect(0, 0, 150, 4);			// fill the progress bar based on how many of our bytes have been loaded			var pct : Number = (event == null) ? .5 : event.bytesLoaded / event.bytesTotal;				_progressBar.beginFill(0xffffff);			_progressBar.drawRect(0, 0, 150 * pct, 4);			_progressBar.endFill();		}		protected function centerProgressBar() : void {			// position of the progressBar						progressBar.x = Math.round((stage.stageWidth - progressBar.width) / 2);			progressBar.y = Math.round((stage.stageHeight - progressBar.height) / 2);		}		/**		 * listen for add to stage events, set defaults		 */		protected function onAddedToStageHandler(event : Event) : void {			// stage resize stuff			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			}		/**		 * Continue on to the main app.		 */		protected function onInitHandler( e : Event ) : void {			// remove progressBar			removeChild(progressBar);			// add main.swf			addChild(loader.content);		}	}}